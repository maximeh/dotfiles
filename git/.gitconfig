[alias]
	amend = commit --amend -C HEAD
	branches = branch -a
	cane = commit --amend --no-edit
	cl = clone --recursive
	cm = 'commit -m'
	contributors = shortlog --summary --numbered
	ctags = !.git/hooks/ctags
	d = diff
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
	f = fetch -p --all
	fp = format-patch -M
	git = !exec git
	go = checkout -B
	gr = "!rg -g '!.git'"
	latest = for-each-ref --count=30 --sort=-committerdate refs/heads/ --format='%(refname:short)'
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	pushf = push --force-with-lease
	rb = "!sh -c \"git rebase -i HEAD~$1\" -"
	remotes = remote -v
	rh = 'reset --hard'
	s = status -sb
	staged = diff --staged
	tags = "!git tag --sort=v:refname"
	undo = reset --soft HEAD^
[apply]
	whitespace = fix
[branch]
	autosetuprebase = always
[color]
	branch = auto
	diff = auto
	interactive = auto
	pager = true
	status = auto
	ui = auto
[core]
	autocrlf = input
	editor = vim
	excludesfile = ~/.gitignore_global
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space
	pager = diff-so-fancy | less --tabs=4 -RFX
	ignorecase = false
[diff]
	renamelimit = 2048
	renames = copies
	algorithm = patience
	colorMovedWS = allow-indentation-change
	colorMoved = dimmed-zebra
[difftool]
	prompt = false
[gc]
	auto=1
[help]
	autocorrect = 1
[init]
	templatedir = ~/.git_template
	defaultBranch = main
[merge]
	summary=true
[pull]
	rebase = true
[push]
	default = simple
	autoSetupRemote = true
[rebase]
	autosquash = true
	autostash = true
[user]
	useConfigOnly = true
[commit]
	verbose = true
[include]
	path = ~/.gitconfig_local
[remote "origin"]
	# github, pagure
	fetch = +refs/pull/*/head:refs/remotes/origin/pr/*
	# gitlab
	fetch = +refs/merge-requests/*/head:refs/remotes/origin/mr/*
	# stash
	fetch = +refs/pull-requests/*:refs/pull-requests/*
[rerere]
	enabled = true
	autoupdate = true
[interactive]
	diffFilter = diff-so-fancy --patch
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[add "interactive"]
	useBuiltin = false
