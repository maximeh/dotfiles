#!/bin/sh
set -e

workdir=$(mktemp -d)

cleanup() {
  [ -d ${workdir} ] && rm -Rf ${workdir}
}
trap cleanup EXIT

check_app() {
  app="$1"
  package="$2"
  if ! which ${app} 1> /dev/null 2>&1; then
    echo -n "'${app}' is not present in your path, please install it"
    if [ -n "${package}" ]; then
      echo " (part of '${package}' utility)."
    else
      echo "."
    fi
    exit 1
  fi
}

check_app "pdfinfo" "poppler-utils"

if [ ! -f "$1" ]; then
  echo "${1} is not a file."
  exit 1
fi
input="${1}"
input_name="${input%%.*}"
input_dir=$(dirname "${input}")
comic_name="${input_dir}/${input_name}.cbr"
[ -n "$2" ] && comic_name="$2"
ext=${comic_name##*.}
if [ "${ext}" = "cbr" ]; then
  check_app 'rar'
elif [ "${ext}" = "cbz" ]; then
  check_app 'zip'
else
  echo "Unsupported extension '${ext}'."
  exit 1
fi

count=0
nb_cpus=$(nproc)
nb_pages=$(pdfinfo "${input}" | awk /Pages:/'{print $2}')
for i in $(seq ${nb_pages}); do
  printf "Extracting (${i}/${nb_pages} pages)\r"
  pdftoppm -f ${i} -l ${i} -jpeg -aa yes -aaVector yes "${input}" ${workdir}/pdf2comic &
  count=$((count+1))
  [ $((count%${nb_cpus})) -eq 0 ] && wait
done
# pdftoppm -jpeg -aa yes -aaVector yes "${input}" ${workdir}/pdf2comic

printf "\nCompressing...\n"
if [ "${ext}" = "cbr" ]; then
  rar -inul -m5 a "${comic_name}" ${workdir}/*
elif [ "${ext}" = "cbz" ]; then
  zip -q -j "${comic_name}" ${workdir}/*
fi

printf "The '${ext}' is ready ! It's at '${comic_name}'\n"
exit 0

